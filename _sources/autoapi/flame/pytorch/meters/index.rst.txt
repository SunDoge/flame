:mod:`flame.pytorch.meters`
===========================

.. py:module:: flame.pytorch.meters


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   average_meter/index.rst
   base_meter/index.rst
   smoothed_value/index.rst
   time_meter/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   flame.pytorch.meters.AverageMeter
   flame.pytorch.meters.AverageMeterGroup
   flame.pytorch.meters.EstimatedTimeOfArrival




.. class:: AverageMeter(name, fmt = ':f')


   Bases: :py:obj:`flame.pytorch.meters.base_meter.Meter`

   不需要了，定义在reset里面就可以了，vscode可以提示

   .. method:: reset(self)


   .. method:: reset_local(self)


   .. method:: update(self, val, n = 1)


   .. method:: sync(self)


   .. method:: avg(self)
      :property:


   .. method:: __str__(self)

      Return str(self).



.. class:: AverageMeterGroup(meters, delimiter = '\t')


   Bases: :py:obj:`flame.pytorch.meters.base_meter.Meter`

   不需要了，定义在reset里面就可以了，vscode可以提示

   .. method:: update(self, metrics, n = 1)


   .. method:: sync(self)


   .. method:: reset(self)


   .. method:: __str__(self)

      Return str(self).



.. class:: EstimatedTimeOfArrival(prefix, total, initial = 0)


   Bases: :py:obj:`flame.pytorch.meters.base_meter.Meter`

   不需要了，定义在reset里面就可以了，vscode可以提示

   .. method:: update(self, n = 1)


   .. method:: remaining_seconds(self)
      :property:


   .. method:: remaining_time(self)
      :property:


   .. method:: arrival_time(self)
      :property:


   .. method:: elapsed_seconds(self)
      :property:


   .. method:: elapsed_time(self)
      :property:


   .. method:: remaining(self)
      :property:


   .. method:: elapsed(self)
      :property:


   .. method:: rate(self)
      :property:


   .. method:: reset(self)


   .. method:: __str__(self)

      Return str(self).



