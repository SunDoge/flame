:py:mod:`flame.pytorch.experimental.engine.container`
=====================================================

.. py:module:: flame.pytorch.experimental.engine.container


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   flame.pytorch.experimental.engine.container.Container



Functions
~~~~~~~~~

.. autoapisummary::

   flame.pytorch.experimental.engine.container.get_dependencies
   flame.pytorch.experimental.engine.container.singleton_provider



Attributes
~~~~~~~~~~

.. autoapisummary::

   flame.pytorch.experimental.engine.container.T


.. py:data:: T
   

   

.. py:class:: Container(modules = None, auto_bind = True, parent = None)

   Bases: :py:obj:`injector.Injector`

   :param modules: Optional - a configuration module or iterable of configuration modules.
       Each module will be installed in current :class:`Binder` using :meth:`Binder.install`.

       Consult :meth:`Binder.install` documentation for the details.

   :param auto_bind: Whether to automatically bind missing types.
   :param parent: Parent injector.

   .. versionadded:: 0.7.5
       ``use_annotations`` parameter

   .. versionchanged:: 0.13.0
       ``use_annotations`` parameter is removed

   .. py:method:: with_injection(self, func)


   .. py:method:: get_dependencies(self, callable, args=(), kwargs={})



.. py:function:: get_dependencies(container, callable, **kwargs)


.. py:function:: singleton_provider(func)


