:mod:`flame.pytorch.experimental.engine.engine`
===============================================

.. py:module:: flame.pytorch.experimental.engine.engine

.. autoapi-nested-parse::

   Process::

       call setup(data, max_epochs, max_iterations, epoch_length)
       call start_epoch_loop() as
           while not done (epoch < max_epochs):
               call step_epoch() as
                   update epoch
                   call start_iteration_loop() as
                       update iteration
                       while True:
                           try:
                               call step_iteration()
                           except StopIteration:
                               break

                       reset iteraion

               reset epoch, data_iter

   需要思考set local_iteration, reset local_iteration的时机，现在的设置可能有问题



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   flame.pytorch.experimental.engine.engine.Engine



Functions
~~~~~~~~~

.. autoapisummary::

   flame.pytorch.experimental.engine.engine._default_process_function



Attributes
~~~~~~~~~~

.. autoapisummary::

   flame.pytorch.experimental.engine.engine._logger
   flame.pytorch.experimental.engine.engine.HandlerTuple
   flame.pytorch.experimental.engine.engine.EventHandlerDict


.. data:: _logger
   

   

.. data:: HandlerTuple
   

   

.. data:: EventHandlerDict
   

   

.. function:: _default_process_function(batch)


.. class:: Engine(process_function = _default_process_function, container = None)


   Bases: :py:obj:`flame.pytorch.experimental.engine.mixins.Serializable`

   作为Engine的基类

   .. method:: add_event_handler(self, event_name, handler, **kwargs)


   .. method:: has_event_handler(self, handler, event_name = None)

      FIXME: 实现不是很正确


   .. method:: compare_handlers(user_handler, registered_handler)
      :staticmethod:

      FIXME: 比较不是很准确


   .. method:: _fire_event(self, event_name)

      最好不要用args，顺序很难确定


   .. method:: fire_event(self, event_name)


   .. method:: step_epoch(self)


   .. method:: step_iteration(self)


   .. method:: internal_run(self)


   .. method:: set_epoch(self, epoch)


   .. method:: set_data(self, data)


   .. method:: setup(self, data, max_epochs = None, max_iterations = None, epoch_length = None)


   .. method:: _start_epoch_loop(self)


   .. method:: _start_iteration_loop(self)


   .. method:: _setup_engine(self)

      Copy fron ignite engine

      不知道有什么用


   .. method:: get_data_length(data)
      :staticmethod:


   .. method:: run(self, data, max_epochs = None, max_iterations = None, epoch_length = None)


   .. method:: _handler_wrapper(self, handler, event_name, event_filter)



